#!/bin/bash

iso=$1
if test -z "$iso" ; then
	echo "usage: $0 ISO"
	exit 1
fi
isodir=`pwd`
scriptdir=$(dirname $(dirname $0))
logfile=autoinst-log.txt

# make absolute path
export ISO=`$scriptdir/tools/absolutize $iso`

# Load the user's configured environment from cwd
if [ ! -e "env.sh" ]; then
	echo "You need a env.sh file in the working directory"
	echo "Copying the sample file..."
	cp -a $scriptdir/env.sh.sample env.sh
	echo "now please edit env.sh"
	exit 1
fi
. env.sh
echo testing $ISO
# cleanup
test -e qemu.pid && kill `cat qemu.pid` 2>/dev/null && rm -f qemu.pid
rm -f backend.run
rm -f qemuscreenshot/*.png

# start
TZ=UTC date "+%s%n%Y-%m-%d %H:%M:%S" > ${logfile}

osautoinstpid=
exithandler()
{
	echo "isotovideo exit handler $osautoinstpid" >&2
	if [ -n "$osautoinstpid" ]; then
		kill $osautoinstpid
	fi
}
if [ -t 0 ]; then
	> stderr.txt
	exec 7> >(tee stderr.txt)
else
	exec 7>stderr.txt
fi
trap exithandler EXIT
perl $scriptdir/start.pl 2>&7 &
osautoinstpid=$!
wait $!
echo "start.pl exited with status $?"
unset osautoinstpid

[ -n "$NAME" ] || NAME=$(perl -e '$_=shift;s{.*/}{};s/\.iso$//;s/-Media1?//;print' $ISO)
if [ -e "qemuscreenshot/shot-0000000001.png" ]; then
	mkdir -p video
	echo "Recording to testresults/$NAME/video.ogv" | tee -a ${logfile}

	# Create the movie
	png2theora qemuscreenshot/shot-%010d.png -o testresults/$NAME/video.ogv >> ${logfile} 2>&1
else
	echo "No screenshots found => no video" | tee -a ${logfile}
fi

test -e qemu.pid && kill `cat qemu.pid` 2>/dev/null && rm -f qemu.pid
rm -f backend.run
echo "QEMU finished, running final checks" >> ${logfile}

echo "+++ STDERR +++" >> ${logfile}
cat stderr.txt >> ${logfile}

cp serial0 testresults/$NAME/serial0.txt
# return success if video was created:
test -e testresults/$NAME/video.ogv

